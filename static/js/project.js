// Generated by CoffeeScript 1.5.0
var doCancel, doProgress, doUpdate, doUpload, finishUpload, lastId, statusurl, stopLoad, ulid, ulurl, uploading;

ulurl = "/upload";

statusurl = "/status/";

uploading = false;

ulid = -1;

lastId = 0;

$(document).ready(function() {
  var lid, _ref, _ref1;
  lid = (_ref = $("#fileList").children(":first")) != null ? (_ref1 = _ref.attr('id')) != null ? _ref1.replace(/file/, '') : void 0 : void 0;
  lastId = parseInt(lid, 10) || -1;
  $.jsonRPC.setup({
    endPoint: '/rpc',
    namespace: 'UploadService'
  });
  return doUpdate();
});

stopLoad = function() {
  var iframe;
  iframe = document.getElementById('ulframe');
  if (iframe.contentWindow.document.execCommand) {
    iframe.contentWindow.document.execCommand('Stop');
  } else {
    iframe.contentWindow.stop();
  }
  return $(iframe).attr('src', 'javascript:false');
};

finishUpload = function() {
  uploading = false;
  $("#progressModal").modal('hide');
  return $("#progressBar").css('width', '0%');
};

doUpload = function() {
  var _ref;
  if (!((_ref = $('[data-provides="fileupload"]').children(".fileupload-preview:first").html()) != null ? _ref.length : void 0)) {
    return false;
  }
  $.jsonRPC.request('NewUpload', {
    params: [],
    success: function(r) {
      ulid = r.result.Ulid;
      $("#upload").attr('action', ulurl + "?ul=" + ulid);
      $("#upload").submit();
      uploading = true;
      $("#progressModal").modal('show');
      return window.setTimeout(doProgress, 500);
    },
    error: function(r) {
      var error;
      error = r.error;
      return alert(error);
    }
  });
  return false;
};

doProgress = function() {
  var requestObj;
  if (!uploading) {
    return false;
  }
  requestObj = {
    Ulid: ulid
  };
  $.jsonRPC.request('Status', {
    params: [requestObj],
    success: function(r) {
      var p, t, u;
      if (!r.result.Status.Started) {
        return false;
      }
      if (r.result.Status.Completed) {
        finishUpload();
        return true;
      }
      u = r.result.Status.Uploaded;
      t = r.result.Status.Total;
      p = "" + Math.floor(u * 100 / t) + "%";
      $("#progressBar").css('width', p);
      if (uploading) {
        return window.setTimeout(doProgress, 500);
      }
    },
    error: function(r) {
      var error;
      error = r.error;
      console.log(error);
      if (uploading) {
        return window.setTimeout(doProgress, 500);
      }
    }
  });
  return true;
};

doCancel = function() {
  if (!uploading) {
    return false;
  }
  stopLoad();
  finishUpload();
  return true;
};

doUpdate = function() {
  var requestObj;
  requestObj = {
    LastId: lastId
  };
  $.jsonRPC.request('Updates', {
    params: [requestObj],
    success: function(r) {
      if (lastId < r.result.LastId) {
        lastId = r.result.LastId;
        return $("#fileList").prepend($.trim(r.result.Updates));
      }
    }
  });
  window.setTimeout(doUpdate, 5000);
  return true;
};
